
















 
Table of Contents

BACKGROUND	1
1.	BUSINESS REQUIREMENTS	1
2.	LIST OF FILES SUPPLIED	1
3.	DESIGN OF THE WEB APPLICATION	2
ADD A CUSTOMER	2
4.	ADD AN ACCOUNT	4
5.	DEPOSIT	5
6.	WITHDRAW	5
7.	BALANCE ENQUIRY	6

 
Background
This document contains the user requirements specifications of the project that has to be executed in order to complete the course Introduction to J2EE – Part 1
 
ABC Bank has many branches all over the country. To provide better service to the customers, ABC Bank plans to automate and web enable their services. 
1.	Business Requirements
The following are the business requirements for this project. 

Sl	Requirement
1	Add a Customer
2	Add an Account
3	Deposit
4	Withdraw
5	Balance Enquiry
2.	List of Files supplied

Sl	File Name	Description
1.	Customer.class	Entity class for a Customer (Part of Bank API developed in Advanced Java Project)
2.	Account.class	Entity class for an Account (Part of Bank API developed in Advanced Java Project)
3.	CustomerDB.class	Data Store class for the Customer table (Part of Bank API developed in Advanced Java Project)
4.	AccountDB.class	Data Store class for the Account table (Part of Bank API developed in Advanced Java Project)
5.	TransactionDB.class	Data Store class for the Transaction table (Part of Bank API developed in Advanced Java Project)
6.	Teller.class	Façade class for the Bank API (Part of Bank API developed in Advanced Java Project)
7.	AddCustomer.html	Form with client side validations for adding a Customer (Developed in HJSX Project)
8.	AddAccount.html	Form with client side validations for adding an Account (Developed in HJSX Project)
9.	Deposit.html	Form with client side validations for depositing an amount (Developed in HJSX Project)
10.	Withdraw.html	Form with client side validations for withdrawing an amount (Developed in HJSX Project)
11.	BalanceEnquiry.html	Form with client side validations for balance enquiry (Developed in HJSX Project)
3.	Design of the Web Application

 

 	Note: The entire back end, Bank API and Data Layer, is to be reused from Advanced Java and Database project


 	Note: All HTML screens are to be reused from HTML/Javascript/XML project

Add a Customer
This module is used to add a new customer.

Fields and Descriptions
1.	Customer Name 
•	Mandatory field
•	Should not be blank
•	Maximum of 25 characters
•	Only alphabets and spaces
•	Only spaces not allowed
2.	Gender
•	Mandatory field
•	Should be either male or female
3.	Date of Birth
•	Mandatory field
•	DD-MON-YYYY format
4.	Address
•	Mandatory field
•	Should not be blank
•	Maximum of 50 characters
•	Any character can be entered
•	Only spaces not allowed
5.	City
•	Mandatory field
•	Should not be blank
•	Maximum of 25 characters
•	Only alphabets and spaces
•	Only spaces not allowed
6.	State
•	Mandatory field
•	Should not be blank
•	Maximum of 25 characters
•	Only alphabets and spaces
•	Only spaces not allowed
7.	Pin
•	Mandatory field
•	Should not be blank
•	Maximum of 7 characters ( including space)
•	Only numbers and spaces
•	Only spaces not allowed
8.	Telephone No
•	Not mandatory field
•	Maximum of 15 characters
•	Only numbers and spaces
9.	Fax
•	Not mandatory field
•	Maximum of 15 characters
•	Only numbers and spaces
10.	Email
•	Mandatory field
•	Maximum of 30 characters
•	Only spaces not allowed
•	Should have one ‘@’ character and one or more ‘.’

Buttons and Description
1.	Submit
•	All validations are done only when this button is clicked
•	The values entered by the user should be send to a JSP
•	The JSP should validate these details and insert them into the Customer table
•	On success, a success message should be displayed with the newly created Customer ID
•	Appropriate messages should be displayed on failure
2.	Reset
•	All the fields should be cleared
•	The form should be ready to accept another set of data
4.	Add an Account
This module is used to add a new Account. 

Fields and Descriptions
1.	Customer ID 
•	Mandatory field
•	Only numbers
•	Should not be blank
•	Maximum of 10 characters
2.	Type of Account 
•	Should be either Savings or Current
3.	Initial Deposit
•	Mandatory field
•	Only numbers 
•	Amount should be greater than 500 (Maximum of two decimal points are allowed)

Buttons and Description
1.	Submit
•	All validations are done only when this button is clicked
•	The values entered by the user should be send to a JSP
•	The JSP should validate these details and insert them into the Account table
•	On success, a success message should be displayed with the newly created Account Number
•	Appropriate messages should be displayed on failure
2.	Reset
•	All the fields should be cleared
•	The form should be ready to accept another set of data
5.	Deposit 
This module is used to deposit an amount in a particular account. 

Fields and Descriptions
1.	Account Number
•	Mandatory field
•	Only numbers
•	Should not be blank
•	Maximum of 10 characters
2.	Amount
•	Mandatory field
•	Only numbers 
•	Amount should be greater than 0 (Maximum two decimal points are allowed)
3.	Description


Buttons and Description
1.	Submit
•	All validations are done only when this button is clicked
•	The values entered by the user should be send to a JSP
•	The JSP should validate these details and update the transaction table and account table
•	On success, the balance amount should be displayed along with the success message
•	Appropriate messages should be displayed on failure
2.	Reset
•	All the fields should be cleared
•	The form should be ready to accept another set of data
6.	Withdraw
This module is used to withdraw an amount from a particular account. 

Fields and Descriptions
1.	Account Number
•	Mandatory field
•	Only numbers
•	Should not be blank
•	Maximum of 10 characters
2.	Amount 
•	Mandatory field
•	Only numbers 
•	Amount should be greater than 0 (Maximum two decimal points are allowed)
3.	Description 
Buttons and Description
1.	Submit
•	All validations are done only when this button is clicked
•	The values entered by the user should be send to a JSP
•	The JSP should validate these details  
•	On success, the balance amount should be displayed along with the success message
•	Appropriate messages should be displayed on failure
2.	Reset
•	All the fields should be cleared
•	The form should be ready to accept another set of data
7.	Balance Enquiry
This module is used to find the balance amount of a particular account number. 

Fields and Descriptions
1. Account Number
•	Mandatory field
•	Only numbers
•	Should not be blank
•	Maximum of 10 characters

Buttons and Description
1.	Submit
•	All validations are done only when this button is clicked
•	The value entered by the user should be send to a JSP
•	The JSP should validate the data and retrieve the balance amount
•	Appropriate messages should be displayed on success and failure
2.	Reset
•	All the fields should be cleared
•	The form should be ready to accept another set of data

